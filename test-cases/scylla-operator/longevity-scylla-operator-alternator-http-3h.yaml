test_duration: 360
prepare_write_cmd:
  - >-
    bin/ycsb load dynamodb -P workloads/workloadc -threads 80 -p recordcount=3495250
    -p fieldcount=10 -p fieldlength=512 -p dataintegrity=true
    -p insertstart=0 -p insertcount=3495250
  - >-
    bin/ycsb load dynamodb -P workloads/workloadc -threads 80 -p recordcount=3495250
    -p fieldcount=10 -p fieldlength=512 -p dataintegrity=true
    -p insertstart=0 -p insertcount=3495250 -p table=usertable_no_lwt
  - >-
    cassandra-stress write cl=QUORUM n=1747625 -log interval=5
    -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3) compaction(strategy=SizeTieredCompactionStrategy)'
    -mode cql3 native -rate threads=80 -col 'n=FIXED(10) size=FIXED(512)' -pop seq=1..1747625
  - >-
    cassandra-stress write cl=QUORUM n=1747625 -log interval=5
    -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3) compaction(strategy=SizeTieredCompactionStrategy)'
    -mode cql3 native -rate threads=80 -col 'n=FIXED(10) size=FIXED(512)' -pop seq=1747626..3495250
stress_cmd:
  - >-
    cassandra-stress write cl=QUORUM duration=180m -log interval=5
    -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3) compaction(strategy=SizeTieredCompactionStrategy)'
    -mode cql3 native -rate threads=20 -col 'n=FIXED(10) size=FIXED(512)' -pop seq=1..3495250
  - >-
    cassandra-stress read  cl=QUORUM duration=180m -log interval=5
    -schema 'replication(strategy=NetworkTopologyStrategy,replication_factor=3) compaction(strategy=SizeTieredCompactionStrategy)'
    -mode cql3 native -rate threads=20 -col 'n=FIXED(10) size=FIXED(512)' -pop seq=1..3495250
  - >-
    bin/ycsb run dynamodb -P workloads/workloadc -threads 20 -p recordcount=3495250
    -p fieldcount=10 -p fieldlength=512 -p dataintegrity=true
    -p readproportion=0.5 -p updateproportion=0.5
    -p operationcount=200200300 -p maxexecutiontime=10800
  - >-
    bin/ycsb run dynamodb -P workloads/workloadc -threads 20 -p recordcount=3495250
    -p fieldcount=10 -p fieldlength=512 -p dataintegrity=true
    -p readproportion=0.5 -p updateproportion=0.5
    -p operationcount=200200300 -p maxexecutiontime=10800 -p table=usertable_no_lwt
round_robin: true

instance_type_db: 'i4i.4xlarge'
n_db_nodes: 4
k8s_n_scylla_pods_per_cluster: 3
n_loaders: 2
# NOTE: only 'dynamic' loader run type works for YCSB while
# https://github.com/scylladb/scylla-cluster-tests/issues/7279 is not fixed
k8s_loader_run_type: 'dynamic'

nemesis_class_name: 'SisyphusMonkey'
nemesis_seed: '080'
nemesis_during_prepare: false

user_prefix: 'k8s-alternator-http-3h'
space_node_threshold: 64424

k8s_enable_tls: false
k8s_enable_sni: false
k8s_enable_alternator: true
# NOTE: by default scylla-operator uses 8043 port for secure connections and 8000 for insecure ones.
alternator_port: 8000
alternator_enforce_authorization: true
alternator_access_key_id: "alternator"
alternator_secret_access_key: "password"

authenticator: 'PasswordAuthenticator'
authenticator_user: cassandra
authenticator_password: cassandra
authorizer: 'CassandraAuthorizer'

dynamodb_primarykey_type: HASH_AND_RANGE
# NOTE: 'alternator_use_dns_routing' is not applicable in K8S case and will be ignored.
alternator_use_dns_routing: false
